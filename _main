#!/usr/bin/env bash

function run() {
  local domain_name=$(potato_get_arg 1)
  local datadir=$HOME/.whois/data
  mkdir -p $datadir
  cd $datadir

  [ ! -d "./.git" ] && git init && git --allow-empty -m"Empty."
  git add -A && git commit -m"Adds existing content prior to the update."

  local tld=''
  local status=''
  local notes=()

  [[ "$domain_name" =~ ^(.*)\.(.+)$ ]] && tld=${BASH_REMATCH[2]}
  local txt=$(whois $domain_name | tee $datadir/$domain_name)

  # Print whois information for the user
  echo "$txt"

  notes+=( "whois performed and tld detected as '$tld'" )

  case $tld in
    "info"|"org")
      [ ! -z "$(echo $txt | grep 'NOT FOUND')" ] && status="AVAILABLE" || status="TAKEN"
      ;;
    "com"|"net")
      [ ! -z "$(echo $txt | grep 'No match for domain')" ] && status="AVAILABLE" || status="TAKEN"
      ;;
    "co")
      [ ! -z "$(echo $txt | grep 'No Data Found')" ] && status="AVAILABLE" || status="TAKEN"
      ;;
    "tech")
      [ ! -z "$(echo $txt | grep 'DOMAIN NOT FOUND')" ] && status="AVAILABLE" || status="TAKEN"
      ;;
    "ir")
      [ ! -z "$(echo $txt | grep 'no entries found')" ] && status="AVAILABLE" || status="TAKEN"
      ;;
    *)
      [ ! -z "$(echo $txt | grep -i 'NOT FOUND')" ] && status="AVAILABLE"
      [ ! -z "$(echo $txt | grep -i 'No match for domain')" ] && status="AVAILABLE"
      [ ! -z "$(echo $txt | grep -i 'No Data Found')" ] && status="AVAILABLE"

      [ ! -z "$(echo $txt | grep -i 'Creation Date')" ] && status="TAKEN"
      notes+=( "detected STATUS might not be correct." )
      ;;
  esac
  echo $status > $domain_name-STATUS
  echo $(date +%F) "${notes[@]}" >> $domain_name-NOTES
      
  git add -A && git commit -m"Adds $domain_name whois info."

  printf "Recorded '%s' for domain '%s'\n" $status $domain_name
}

